<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../partials/head'); %>
</head>
<script src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.3.4/vue.js"></script>
<script src="https://unpkg.com/vue-router@3"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>

<body>

  <header>
    <%- include('partials_provider/header'); %>
  </header>

  <main id=main>
    <div class="container-fluid">
      <h3 style="margin-top:10px;color:green;text-align:center;">
        AWESOME Auctions: {{owner}}
      </h3>
      <div class="container">
        <button type="button" class="btn btn-success btn-sm" v-on:click="toggleActive()">{{active}}</button>
        <div class="row">
          <!--<div v-if="active == 'active'">-->
          <div v-for="auc in auctionArr" class="col-md-6 col-12 my-2">
            <div class="card border-success mb-3">
              <div class="card-header">
                <a v-bind:href="'auctionCard?auctionID='+auc.key">
                  <h5 style="margin-top:10px;color:green;text-align:center;">
                    {{auc.key}}
                    <div v-if="auc.active === false">
                      (Inactive)
                    </div>
                  </h5>
                </a>
              </div>
              <div class="card-body">
                <div v-if="auc.auctionObject.auctionRules.auctionType === 'english'">
                  <h5 class="card-title" style="color:green;">English Auction</h5>
                </div>
                <div v-else-if="auc.auctionObject.auctionRules.auctionType === 'dutch'">
                  <h5 class="card-title" style="color:orange;">Dutch Auction</h5>
                </div>
                <div v-else-if="auc.auctionObject.auctionRules.auctionType === 'fpsb'">
                  <h5 class="card-title" style="color:green;">First Priced Sealed Bid Auction</h5>
                </div>
                <div v-else-if="auc.auctionObject.auctionRules.auctionType === 'spsb'">
                  <h5 class="card-title" style="color:green;">Second Priced Sealed Bid Auction</h5>
                </div>
                <h6 class="card-subtitle mb-2" style="color:green;">Commodity type: {{auc.auctionObject.service.commodity.docType}}</h6>
                <h6 class="card-subtitle mb-2" style="color:green;">Auction owner: {{auc.owner}}</h6><br>
                <div v-if = "auc.auctionObject.auctionRules.auctionType !== 'dutch'">
                  <h6 class="card-subtitle mb-2" style="color:green;">Auction deadline: {{getAuctionDeadline(auc.auctionObject.auctionRules.deadline)}}</h6>
                </div>
                <button type="button" class="btn btn-success btn-sm" v-on:click="showProperties(auc)">Service Properties</button>
                <div v-if="auc.showProperties">
                  <ul class="list-group list-group-flush" style="margin-top: 10px;">
                    <div v-for="property in auc.auctionObject.service.commodity.properties">
                      <li class="list-group-item list-group-item-success"><b>{{property.commodityKey}}: </b>{{property.commodityValue}}</li>
                    </div>
                  </ul>
                </div>
                <br>
                <button type="button" class="btn btn-success btn-sm" v-on:click="showSLA(auc)" style="margin-top:10px;">SLA rules</button>
                <div v-if="auc.showSLA">
                  <ul class="list-group list-group-flush" style="margin-top: 10px;">
                    <div v-for="(rule, index) in auc.auctionObject.service.sloRulesAndFines">
                      <li class="list-group-item list-group-item-success">{{index +1}}. {{rule.ruleIdentifier}}: {{rule.ruleFine}} {{getCurrency(rule.currency)}}</li>
                    </div>
                  </ul>
                </div>
                <br>
                <div v-if="auc.auctionObject.auctionRules.auctionType!=='dutch'">
                  <button type="button" class="btn btn-outline-dark btn-sm" v-on:click="showHighestBid(auc)" style="margin-top:10px;">Highest Bid:</button>
                  <div v-if="auc.showHighestBid">
                    <div v-if="auc.highestBid !== 'No bids posted'" style="margin-top:10px;">
                      <b>{{auc.highestBid.owner}}:</b> {{auc.highestBid.pricing.bidAmount}} {{getCurrency(auc.highestBid.pricing.pricingCurrency)}} {{getSubscription(auc.highestBid.pricing.pricingSubscription)}}
                    </div>
                    <div v-else style="margin-top:10px;">
                      {{auc.highestBid}}
                    </div>
                    <!--<ul class="list-group list-group-flush" style="margin-top: 10px;">
                      <div v-for="rule in auc.auctionObject.service.rules">
                          <li class="list-group-item list-group-item-success"><b>{{rule.ruleString}}: </b>{{rule.ruleFine}} {{getCurrency(rule.currency)}}</li>
                      </div>
                    </ul>-->
                  </div>
                </div>
                <div v-else>
                  <button type="button" class="btn btn-outline-dark btn-sm" v-on:click="showHighestBid(auc)" style="margin-top:10px;">Current price</button>
                  <div v-if="auc.showHighestBid">
                    {{auc.highestBid}}
                    <!--<ul class="list-group list-group-flush" style="margin-top: 10px;">
                      <div v-for="rule in auc.auctionObject.service.rules">
                          <li class="list-group-item list-group-item-success"><b>{{rule.ruleString}}: </b>{{rule.ruleFine}} {{getCurrency(rule.currency)}}</li>
                      </div>
                    </ul>-->
                  </div>
                </div>
                <div class="row">
                  <div class="col-xs-4" style="margin-top:10px; display: block;margin-left: auto;margin-right: auto;justify-content: center;">
                    <a v-bind:href="'auctionCard?auctionID='+auc.key" class="btn btn-success" style="display: block;margin-left: auto;margin-right: auto;justify-content: center;">View</a>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <hr style="color:green; border: 2px solid">
  </main>

  <footer>
    <%- include('../partials/footer'); %>
  </footer>

  <script type="text/javascript">
    var router = new VueRouter({
      mode: 'history',
      routes: []
    });
    window.app = new Vue({
      router,
      el: '#main',
      data() {
        return {
          result: [],
          owner: 'provider1',
          auctionArr: [],
          active: "Inactive",
          activeArr: [],
          inactiveArr: []
        }
      },
      methods: {
        toggleActive() {
          if (this.active == "Inactive") {
            this.active = "Active";
            this.auctionArr = this.inactiveArr;
          } else if (this.active == "Active") {
            this.active = "Inactive";
            this.auctionArr = this.activeArr;
          }
        },
        parser(result) {
          console.log(result);
          console.log(result.toString());
          for (var i = 0; i < result.length; i++) {
            auctionObject = JSON.parse(result[i].Record.auctionObject);
            key = result[i].Key;
            bidsArr = result[i].Record.bids;
            bids = [];
            active = result[i].Record.active;
            for (var j = 0; j < bidsArr.length; j++) {
              bidObject = JSON.parse(bidsArr[j].bid);
              bidObject.owner = bidsArr[j].customerID;
              bids.push(
                bidObject
              );
            }
            highestBid = this.getHighestBid(bids);
            owner = result[i].Record.owner;
            if (active == true) {
              this.activeArr.push({
                key,
                owner,
                active,
                auctionObject,
                showProperties: false,
                showSLA: false,
                bids,
                highestBid,
                showHighestBid: true
              })
            } else {
              this.inactiveArr.push({
                key,
                owner,
                active,
                auctionObject,
                showProperties: false,
                showSLA: false,
                bids,
                highestBid,
                showHighestBid: true
              })
            }
          }
          this.auctionArr = this.activeArr;
          //this.auction = JSON.parse(result.auction);
          //this.auctionSafe = JSON.parse(JSON.stringify(this.auction));
        },
        getAuctionDeadline(d) {
          var date = new Date(Date.parse(d));
          return date.toLocaleString(); //where are the seconds?!?
        },
        getSubscription(subscription) {
          if (subscription == "flatFee") {
            return "Flat fee";
          } else if (subscription == "perHour") {
            return "Per Hour";
          } else if (subscription == "perMonth") {
            return "Per Month";
          } else if (subscription == "perYear") {
            return "Per Year";
          } else {
            return "Flat Fee";
          }
        },
        getHighestBid(bids) {
          if (bids.length == 0) {
            return "No bids posted"
          }
          highest = 0;
          result = {};
          for (var i = 0; i < bids.length; i++) {
            bid = bids[i];
            if (parseInt(bid.pricing.bidAmount) > highest) {
              highest = bid.pricing.bidAmount;
              result = bid;
            }
          }
          return result;
        },
        showHighestBid(auc) {
          if (auc.showHighestBid == true) {
            auc.showHighestBid = false;
          } else {
            auc.showHighestBid = true;
          }
        },
        showProperties(auc) {
          if (auc.showProperties == true) {
            auc.showProperties = false;
          } else {
            auc.showProperties = true;
          }
        },
        showSLA(auc) {
          if (auc.showSLA == true) {
            auc.showSLA = false;
          } else {
            auc.showSLA = true;
          }
        },
        getCurrency(currency) {
          return "zCoins";
        },
        async created2() {
          const token = sessionStorage.getItem("JWT");
          if (token == null) {
            window.location = "/"
          }
          const owner2 = sessionStorage.getItem("username");
          this.owner = owner2;
          console.log(token);
          config = {
            headers: {
              Authorization: `Bearer ${token}`
            }
          };
          const res = await axios.get("http://127.0.0.1:8080/api/query?args=[]&fcn=queryAllServicesAsOwner", config);
          if (res.data.error != null) {
            //console.log(res.data.result);
            alert(res.data.error);
          } else {
            this.result = res.data.result;
            console.log(this.result);
            this.parser(this.result);
          }
        }
      },
      async created() {
        this.created2();
      }
    });
  </script>

</body>

</html>
